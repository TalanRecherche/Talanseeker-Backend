r"""Created on Sun Sep 17 13:07:47 2023

@author: agarc
/!\ This test call the openAI API and will be billed /!\
"""
import pytest

from app.core.chatbot_features.intentionfinder import IntentionFinder
from app.core.models.query_pandasmodels import QueryStruct
from app.settings.settings import Settings
import uuid
import socket
from langfuse.decorators import observe, langfuse_context


@pytest.mark.skip_this(
    reason="Skipping test from running because it is calling OpenAI-API",
)
@observe()
def test_01_structured_query_format():
    settings = Settings()
    user_query = "Trouve moi deux data scientists"
    intention_finder = IntentionFinder()
    structured_query = intention_finder.guess_intention(user_query)

    langfuse_context.update_current_trace(
        name="Trace generated by test_intentionfinder python test execution",
        session_id=f"test-{uuid.uuid4()}",
        user_id=socket.gethostname(),
        tags=["pytest", "test_intentionfinder"],
        metadata={"file": "test_intentionfinder.py"},
        public=True
    )
    
    print(f"\n\n\t\t== Prediction ==\n\t\t{structured_query.to_json(orient='records',force_ascii=False)}")
    print(f"""\n\n\t  {"*"*150}
          \t\tSee trace id({langfuse_context.get_current_trace_id()}) at:\t {langfuse_context.get_current_trace_url()}
          {"*"*150}""")
 
    assert QueryStruct.validate_dataframe(structured_query)


if __name__ == "__main__":
    pytest.main()
